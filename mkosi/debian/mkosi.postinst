#!/bin/sh
useradd -m -s /bin/bash dev
usermod dev -a -G sudo
echo 'dev:lilypond'|chpasswd

cat >> /home/dev/.bashrc <<EOF
### LilyDev custom settings ###

# This variable is needed to be able to access the X display in the host
# when running graphical applications, such as gitk or lily-git.cl.
# NOTE: The value of DISPLAY must be the same as in the host (usually it's :0,
# so we made this assumption); the user id of guest and host users must be the
# same (it should be the same, i.e. 1000), otherwise access to the display
# won't be granted.
export DISPLAY=:0

# Prompt settings
export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWUNTRACKEDFILES=true
export GIT_PS1_SHOWUPSTREAM=auto
export PS1='[\u@\h:\W\$(declare -F __git_ps1 &>/dev/null && __git_ps1 " (%s)")]\$ '

# Default editor
export EDITOR=/bin/nano

# Variables needed to build LilyPond
export LILYPOND_GIT=~/lilypond-git
export LILYPOND_BUILD_DIR=~/lilypond-git/build
export LILYPOND_WEB_MEDIA_GIT=~/lilypond-extra

# Settings needed to compile lilypond with guile-1.8
GUILE_CONFIG=/usr/local/bin/guile-config

# Add other directories to the PATH
export PATH=$HOME/git-cl:$LILYPOND_GIT/scripts/auxiliar:$PATH
EOF

# guile-1.8 is not available on debian stable repository,
# so we build and install it in /usr/local.
# These lines can be removed when lilypond will support guile-2.

git clone -b branch_release-1-8 --single-branch https://git.savannah.gnu.org/git/guile.git guile-1.8
cd guile-1.8
./autogen.sh
./configure --disable-error-on-warning --prefix=/usr/local
make
make install
ldconfig


# Enable i386 multiarch support (for GUB)
dpkg --add-architecture i386
apt update
apt install -y libc6:i386

# Add backports repositories to install packages needed by VirtualBox (but it
# might be useful also to install more recent software). It should be
# safe, as packages from backports have low priority (100) and cannot be
# installed accidentally.
echo "deb http://ftp.debian.org/debian stretch-backports main contrib" >> /etc/apt/sources.list
apt update
DEBIAN_FRONTEND=noninteractive apt -t stretch-backports install -y virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11

# Group membership in 'vboxsf' allow accessing VirtualBox 'shared folders'
usermod -aG vboxsf dev

# We need Python 3.6 in order to run a current mkosi version
# Python 3.6 is not available for Debian stretch, safest approach
# is to compile it from source
cd /home/dev
wget https://www.python.org/ftp/python/3.6.9/Python-3.6.9.tgz
tar xf Python-3.6.9.tgz
cd Python-3.6.9
# compiling with --enable-optimizations creates a faster interpreter,
# but needs plenty of time during compiling due to test runs
./configure
make
# make altinstall is recommended to leave the system's old python3
# intact, see: https://docs.python.org/3/using/unix.html#building-python
make altinstall
# remove build directory afterwards
rm -r /home/dev/Python-3.6.9

# Download mkosi v5 from systemd/mkosi repo and install it
cd /home/dev
git clone -b v5 --single-branch -depth 1 git://github.com/systemd/mkosi.git
/usr/local/bin/python3.6 mkosi/setup.py install
# remove sources
rm -r mkosi
